[
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "NLSY data",
    "section": "",
    "text": "We‚Äôre using some data from the National Longitudinal Survey of Youth 1979, a cohort of American young adults aged 14-22 at enrollment in 1979. They continue to be followed to this day, and there is a wealth of publicly available data online. I‚Äôve downloaded the answers to a survey question about whether respondents wear glasses, a scale about their eyesight with glasses, their (NLSY-assigned üòí) race/ethnicity, their sex (presumably at birth, but unclear), their family‚Äôs income in 1979, and their age at the birth of their first child."
  },
  {
    "objectID": "day-1/03-projects.html",
    "href": "day-1/03-projects.html",
    "title": "1.3 R projects and file management",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/03-projects.html#exercises",
    "href": "day-1/03-projects.html#exercises",
    "title": "1.3 R projects and file management",
    "section": "Exercises",
    "text": "Exercises\n\nDownload the .R script here and the .csv file here.\nIn your computer file browser, find your epi590r-in-class repo and create an R folder and a data folder. Within the data folder add a raw folder and a clean folder. Put the .csv file in the data/raw folder and the script in R folder. Your file structure should look like this:\nepi590r-in-class/\n‚îú‚îÄ epi590r-in-class.Rproj\n‚îú‚îÄ README.md\n‚îú‚îÄ R/\n‚îÇ   ‚îî‚îÄ clean-data-bad.R\n‚îú‚îÄ data/\n‚îÇ   ‚îú‚îÄ raw/\n‚îÇ   ‚îÇ  ‚îî‚îÄ nlsy.csv\n‚îÇ   ‚îî‚îÄ clean/\nReturn to RStudio. Look to the filepane to confirm the files are there.\nLook at your Git pane. What do you notice? Stage, commit, and push the changes you‚Äôve made.\nTry to run the code, line-by-line, in clean-data-bad.R. What do you notice?\nGo to Tools &gt; Global Options and under General, change your settings so that they match these:\n\nClose RStudio. Open it up again by opening the epi590r-in-class.Rproj file in your file browser. You should have a clean environment!\n\nMacWindows"
  },
  {
    "objectID": "day-1/03-projects.html#resources",
    "href": "day-1/03-projects.html#resources",
    "title": "1.3 R projects and file management",
    "section": "Resources",
    "text": "Resources\n\nJenny Bryan‚Äôs blog post: Project-oriented workflow"
  },
  {
    "objectID": "day-1/06-gtsummary.html",
    "href": "day-1/06-gtsummary.html",
    "title": "1.6 Descriptive tables with {gtsummary}",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/06-gtsummary.html#slides",
    "href": "day-1/06-gtsummary.html#slides",
    "title": "1.6 Descriptive tables with {gtsummary}",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/04-here.html",
    "href": "day-1/04-here.html",
    "title": "1.4 {here} package",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/04-here.html#exercises",
    "href": "day-1/04-here.html#exercises",
    "title": "1.4 {here} package",
    "section": "Exercises",
    "text": "Exercises\n\nInstall the {here} package:\ninstall.packages(\"here\")\nIn the console, run:\nhere::here() to print your project directory\ngetwd() to print your working directory\nWhat do you notice?\nIn the console, run:\nsetwd(\"data\") to set your working directory\nThen run the same lines as above. What do you notice?\nDownload the .R script here and use your file browser to put it in the R folder in your project. Open the script and run through the code line-by-line. Compare it with the code from the last section."
  },
  {
    "objectID": "day-1/04-here.html#resources",
    "href": "day-1/04-here.html#resources",
    "title": "1.4 {here} package",
    "section": "Resources",
    "text": "Resources\n\n{here} package documentation\nA blog post by Malcolm Barrett"
  },
  {
    "objectID": "day-1/05-new-projects.html",
    "href": "day-1/05-new-projects.html",
    "title": "1.5 Starting from scratch",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/05-new-projects.html#exercises",
    "href": "day-1/05-new-projects.html#exercises",
    "title": "1.5 Starting from scratch",
    "section": "Exercises",
    "text": "Exercises\n\nCreate a new project either from File &gt; New Project or using the drop-down menu in the upper-right corner of RStudio. This time, choose ‚ÄúNew Directory‚Äù and then ‚ÄúNew Project‚Äù.\n\nChoose a name for your new project and where to store it. Check ‚ÄúCreate a git repository.‚Äù You can leave ‚ÄúUse renv with this project‚Äù unchecked (for now!).\n\nLook at the git pane. What do you notice compared to the first time we looked at this pane? Stage and commit the files (I usually use ‚Äúinitial commit‚Äù as my first commit message since I haven‚Äôt don‚Äôt anything yet!). You‚Äôll notice the ‚ÄúPush‚Äù button is grayed out ‚Äì we‚Äôll have to fix that!\n\nOpen up your web browser to GitHub. There are a few different ways to make a new repository; click one of them.\n\nFrom github.comFrom github.com/username\n\n\n\n\n\n\n\n\n\nChoose a name (preferably one that matches the name you gave your R project). You can also add a description and choose to make it private, if you wish. (If private, you‚Äôll have to invite the teaching team as collaborators so we can grade it!) You don‚Äôt need to click anything else.\n\nGitHub is going to give you some options for code. You‚Äôre going to use the second option: ‚Äúpush an existing repository from the command line‚Äù because you‚Äôve already initialized the repo in RStudio. You are going to run this code in the terminal. You‚Äôll find that in a tab next to the console.\n\n\n\nEven though it looks like you can copy and paste the 3 lines of code at once, you can‚Äôt! You‚Äôll get the error you see above (I do this every time). Instead, copy and paste and run them one at a time. Then refresh your GitHub page!\nCreate a new file called secrets.txt (you can do this via File &gt; New File &gt; Text file, then save the file). Write down your deepest, darkest secrets in there.\nUh oh! It shows up in the git pane. You don‚Äôt want to accidentally commit this to your repo!\nOpen .gitignore via the RStudio filepane.1 Add ‚Äúsecrets.txt‚Äù below the files that RStudio helpfully ignored for you. Then save. What happened in the git pane?\n\nWhenever you have something that shouldn‚Äôt be shared with the world, like a password or a dataset, you should add it to the .gitignore. There are a lot of examples here of how you can match folders and file patterns.\nSet up your folders how you‚Äôd like in your repo. For example, along with an R folder and a data folder, I like to have a documents folder. Find some data online, download it, and store it in your data folder. Commit and push to GitHub!\nSome fun options for data are:\n\nhttps://data.fivethirtyeight.com/\nhttps://github.com/rfordatascience/tidytuesday#datasets\nhttps://github.com/higgi13425/medicaldata/tree/master/data (descriptions: https://higgi13425.github.io/medicaldata/#list-of-datasets)"
  },
  {
    "objectID": "day-1/05-new-projects.html#resources",
    "href": "day-1/05-new-projects.html#resources",
    "title": "1.5 Starting from scratch",
    "section": "Resources",
    "text": "Resources\n\nThis is a slightly simpler (I think) version of the Existing project, GitHub last workflow\n.gitignore patterns\n.gitignore documentation"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Syllabus",
    "section": "",
    "text": "DEPARTMENT: Epidemiology\nCOURSE NUMBER: EPI 590R\nCREDIT HOURS: 1\nSEMESTER: Fall 2023 (Preterm)\nCOURSE TITLE: R Bootcamp\nCLASS HOURS AND LOCATION: August 14 & 15, 9am-12:30pm & 1:30pm-5pm\nINSTRUCTOR NAME: Louisa Smith\nINSTRUCTOR EMAIL: l.smith@northeastern.edu"
  },
  {
    "objectID": "about.html#concentration-competencies",
    "href": "about.html#concentration-competencies",
    "title": "Syllabus",
    "section": "CONCENTRATION COMPETENCIES",
    "text": "CONCENTRATION COMPETENCIES\n\nUtilize statistical software to conduct epidemiological analysis."
  },
  {
    "objectID": "about.html#course-learning-objectives",
    "href": "about.html#course-learning-objectives",
    "title": "Syllabus",
    "section": "COURSE LEARNING OBJECTIVES",
    "text": "COURSE LEARNING OBJECTIVES\n\nBy the end of Lecture 1, students will be able to identify the benefits of a reproducible workflow for conducting analyses in R and specify the drawbacks of their current workflows.\nBy the end of Lecture 2, students will be able to create and open an R Project and navigate the filesystem within that project using the here package.\nBy the end of Lecture 3, students will be able to create a repository for their R project on GitHub and commit changes.\nBy the end of Lecture 4, students will be able to initiate a package environment using renv and describe how it works to ensure package consistency.\nBy the end of Lecture 5, students will be able to create a table of descriptive statistics and a table for regression model output and extract values from the tables.\nBy the end of Lecture 6, students will be able to render a quarto document as a Word or html file and identify when to use various chunk options.\nBy the end of Lecture 7, students will be able to wrap aspects of their analysis within functions.\nBy the end of Lecture 8, students will be able to initiate a targets workflow and create appropriate targets using their analysis functions.\n\n\nNote: Lecture numbers and their order are subject to change."
  },
  {
    "objectID": "about.html#evaluation",
    "href": "about.html#evaluation",
    "title": "Syllabus",
    "section": "EVALUATION",
    "text": "EVALUATION\n\n\n\nBasis of Course Grade\n\n\n\n\n\nIn-class activities\n30%\n\n\nParticipation\n30%\n\n\nFinal project\n40%\n\n\n\n\n\n\nFinal grade point cutoffs\n\n\n\n\n\nS\n[75, 100)\n\n\nU\n[0, 75)"
  },
  {
    "objectID": "about.html#course-structure",
    "href": "about.html#course-structure",
    "title": "Syllabus",
    "section": "COURSE STRUCTURE",
    "text": "COURSE STRUCTURE\nPre-work: Students are expected to come prepared with R, RStudio, git, and the relevant R packages installed on a laptop. Students should also create accounts on Github. Instructions for doing so and a brief activity to confirm installation will be communicated prior to the course, and I will be available via email to troubleshoot installation problems.\nIn-class activities: The bulk of the course content will be covered over the course of two daylong sessions consisting of lectures interspersed with individual and group work.\nParticipation: In-class participation consists not only of volunteering answers and/or asking questions during lectures, but also interacting with peers in small-group sessions. Small-group work will give you the opportunity to ask and answer questions with classmates. Participation includes showing a classmate how to solve a problem (not just doing it for them), asking a classmate or me for help and describing the initial steps to solve the problem, and sharing solutions with the whole class.\nFinal project: The final project will provide an opportunity to bring together the skills you have learned in class and will be due after the course (tentative due date August 29). The project will consist of a reproducible, real-world epidemiologic analysis. The goal of the analysis will be the process and workflow rather than the scientific process or conclusions. The final project will be submitted via GitHub.\n\n\n\n\n\n\n\n\nMPH/MSPH Concentration Competency\nRepresentative Assessment\n\n\n\n\n\nUtilize statistical software to conduct epidemiological analysis.\nFinal project"
  },
  {
    "objectID": "about.html#required-andor-recommended-texts",
    "href": "about.html#required-andor-recommended-texts",
    "title": "Syllabus",
    "section": "Required and/or recommended texts",
    "text": "Required and/or recommended texts\nRecommended readings will consist mainly of package documentation and blog posts. Links to these freely available texts are included in the course calendar; more resources may be provided with the course materials."
  },
  {
    "objectID": "about.html#attendance",
    "href": "about.html#attendance",
    "title": "Syllabus",
    "section": "Attendance",
    "text": "Attendance\nBecause there are only two in-person class sessions, these are integral and mandatory parts of the course. Attendance and preparation are required. If you are unable to attend a class session due to illness or emergency, contact the instructor as soon as possible to plan to make up the missed work."
  },
  {
    "objectID": "about.html#course-participation",
    "href": "about.html#course-participation",
    "title": "Syllabus",
    "section": "Course Participation",
    "text": "Course Participation\nThe success of the course relies on active in-class student participation and preparation. You are expected to prepare by completing the required activities before the first class. In-class participation consists not only of volunteering answers and/or asking questions during lectures, but also interacting with peers in small-group sessions. Small-group work will give you the opportunity to ask and answer questions with classmates. Participation includes showing a classmate how to solve a problem (not just doing it for them), asking a classmate or teacher for help and describing the initial steps to solve the problem, and sharing solutions with the whole class."
  },
  {
    "objectID": "about.html#assignment-submission",
    "href": "about.html#assignment-submission",
    "title": "Syllabus",
    "section": "Assignment Submission",
    "text": "Assignment Submission\nIn-class activities and the final project will be submitted via GitHub. Instructions will be provided in class."
  },
  {
    "objectID": "about.html#communication",
    "href": "about.html#communication",
    "title": "Syllabus",
    "section": "Communication",
    "text": "Communication\nPrior to the course, the instructor can be contacted via email. After the course begins, the instructor can be contacted via email for questions specific to a student, and discussions and questions that may affect the whole class will take place on GitHub.\nIf your situation changes regarding health, housing, or in any other regard with respect to your ability to participate in the class, please avail yourself to any relevant Emory student support organizations and notify me as soon as feasible. It is much easier for me to address your needs if I know about them as soon as they arise. While I may not be able to successfully respond to every request, I emphasize that my goal is to treat you all equitably and do what I can to help you succeed in this course."
  },
  {
    "objectID": "about.html#diversity-and-inclusion",
    "href": "about.html#diversity-and-inclusion",
    "title": "Syllabus",
    "section": "Diversity and Inclusion",
    "text": "Diversity and Inclusion\nIn this course, we value the diverse perspectives, experiences, and backgrounds of all students. Our goal is for all students to be able to participate fully and have their learning supported both in and out of class. Therefore, we will work to foster an environment in which each student is able to hear and respect one another. Working as a team is not always easy and sometimes involves difficult conversations. We will approach these conversations with empathy and the openness to deepen our understanding of multiple perspectives. We are here to support you and your colleagues throughout the course. Please let us know of ways to improve the course and best support your learning.\nIf you experience barriers to learning in this course, please do not hesitate to discuss them with me and the Office of Diversity, Equity, and Inclusion."
  },
  {
    "objectID": "about.html#accessibility-and-accommodations",
    "href": "about.html#accessibility-and-accommodations",
    "title": "Syllabus",
    "section": "Accessibility and Accommodations",
    "text": "Accessibility and Accommodations\nAccessibility Services works with students who have disabilities to provide reasonable accommodations. In order to receive consideration for reasonable accommodations, you must contact the Office of Accessibility Services (OAS). It is the responsibility of the student to register with OAS. Please note that accommodations are not retroactive and that disability accommodations are not provided until an accommodation letter has been processed.\nStudents who registered with OAS and have a letter outlining their academic accommodations are strongly encouraged to coordinate a meeting time with me to discuss a protocol to implement the accommodations as needed throughout the semester. This meeting should occur as early in the semester as possible.\nContact Accessibility Services for more information at (404) 727-9877 or accessibility@emory.edu. Additional information is available at the OAS website at http://equityandinclusion.emory.edu/access/students/index.html"
  },
  {
    "objectID": "about.html#honor-code",
    "href": "about.html#honor-code",
    "title": "Syllabus",
    "section": "Honor Code",
    "text": "Honor Code\nYou are bound by Emory University‚Äôs Student Honor and Conduct Code. RSPH requires that all material submitted by a student fulfilling his or her academic course of study must be the original work of the student. Violations of academic honor include any action by a student indicating dishonesty or a lack of integrity in academic ethics. Academic dishonesty refers to cheating, plagiarizing, assisting other students without authorization, lying, tampering, or stealing in performing any academic work, and will not be tolerated under any circumstances.\nThe RSPH Honor Code states: ‚ÄúPlagiarism is the act of presenting as one‚Äôs own work the expression, words, or ideas of another person whether published or unpublished (including the work of another student). A writer‚Äôs work should be regarded as his/her own property.‚Äù (http://www.sph.emory.edu/cms/current_students/enrollment_services/honor_code.html)"
  },
  {
    "objectID": "day-2/03-quarto3.html",
    "href": "day-2/03-quarto3.html",
    "title": "2.3 Quarto tables, figures, and stats",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-2/03-quarto3.html#exercises",
    "href": "day-2/03-quarto3.html#exercises",
    "title": "2.3 Quarto tables, figures, and stats",
    "section": "Exercises",
    "text": "Exercises\nReturn to the quarto document with the tables.\n\nChoose a table to label and caption, and then write a sentence that cross-references it (e.g., Table 1 shows the descriptive statistics)\nFrom that table, choose at least two statistics to pull out of the table and include in the text using inline_text().\nAdd another statistic to the text that you calculate yourself using the nlsy data, e.g., the mean number of hours of sleep on weekends.\nRender the document! Make sure it renders, and then commit and push."
  },
  {
    "objectID": "day-2/03-quarto3.html#resources",
    "href": "day-2/03-quarto3.html#resources",
    "title": "2.3 Quarto tables, figures, and stats",
    "section": "Resources",
    "text": "Resources\n\nThe quarto website is an amazing resource\nFeel free to look at the source code of this site\n\nAdditional resources for R Markdown will have a lot of overlap:\n\nThe Definitive Guide to R Markdown\nThe R Markdown Cookbook"
  },
  {
    "objectID": "day-2/02-quarto2.html",
    "href": "day-2/02-quarto2.html",
    "title": "2.2 Quarto options",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-2/02-quarto2.html#exercises",
    "href": "day-2/02-quarto2.html#exercises",
    "title": "2.2 Quarto options",
    "section": "Exercises",
    "text": "Exercises\n\nDownload this quarto document with some {gtsummary} tables from yesterday\nThere‚Äôs an error in the code! Try to render it. Play around with eval: and error: chunk and document options to help you a) find the error and b) render the document despite the error. Then fix the error.\nI don‚Äôt like seeing the output from the first chunk, where the passages are loaded. Make it so that we don‚Äôt see this chunk‚Äôs code or output.\nPlay around with themes!"
  },
  {
    "objectID": "day-2/02-quarto2.html#resources",
    "href": "day-2/02-quarto2.html#resources",
    "title": "2.2 Quarto options",
    "section": "Resources",
    "text": "Resources\n\nThe quarto website is an amazing resource\nFeel free to look at the source code of this site\n\nAdditional resources for R Markdown will have a lot of overlap:\n\nThe Definitive Guide to R Markdown\nThe R Markdown Cookbook"
  },
  {
    "objectID": "day-2/05-functions.html",
    "href": "day-2/05-functions.html",
    "title": "2.5 Functions",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-2/05-functions.html#exercises",
    "href": "day-2/05-functions.html#exercises",
    "title": "2.5 Functions",
    "section": "Exercises",
    "text": "Exercises\n\nSquare a number. You‚Äôre tired of writing x^2 when you want to square x, so you want a function to square a number. You can call it square(). I showed this in the slides, now try on your own!\n\n\n# start out with a number to test\nx &lt;- 3\n# you'll want your function to return this number\nx^2\nsquare &lt;- function() {\n  \n}\n# test it out\nsquare(x)\nsquare(53)\n53^2 # does this match?\n\n\nRaise to any power. You don‚Äôt just want to square numbers, you want to raise them to higher powers too. Make a function that uses two arguments, x for a number, and power for the power. Call it raise().\n\n\nraise &lt;- function() {\n  \n}\n\n# test with\nraise(x = 2, power = 4)\n# should give you\n2^4\n\n\nChange your raise() function to default to squaring x when the user doesn‚Äôt enter a value for power.\n\n\n# test\nraise(x = 5)\n# should give you\n5^2"
  },
  {
    "objectID": "day-2/05-functions.html#resources",
    "href": "day-2/05-functions.html#resources",
    "title": "2.5 Functions",
    "section": "Resources",
    "text": "Resources\n\nAdvanced R"
  },
  {
    "objectID": "day-2/06-targets.html",
    "href": "day-2/06-targets.html",
    "title": "2.6 {targets}",
    "section": "",
    "text": "Slides\nOpen the slides in a new tab here.\n\n\n\n\n\nExercises\n\nClone this repo to your computer as a new R project.\nExamine the file structure, the code, the _targets.R file.\nRun tar_make().\nExamine everything again and see what‚Äôs new.\nPut the Poisson regression and table you made yesterday (look in your R/regression-examples.R file in your in-class R project!) into functions and add to the appropriate folders.\nAdd tar_target() calls to _targets.R.\nAdd a code chunk to output the table in my-analysis.qmd.\nRun tar_outdated().\nRun tar_make().\n\n\n\nResources\n\nThe user manual is a great resource for learning more"
  },
  {
    "objectID": "day-2/01-quarto.html",
    "href": "day-2/01-quarto.html",
    "title": "2.1 Reports and manuscripts with Quarto",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-2/01-quarto.html#exercises",
    "href": "day-2/01-quarto.html#exercises",
    "title": "2.1 Reports and manuscripts with Quarto",
    "section": "Exercises",
    "text": "Exercises\n\nOpen up your epi590r-in-class project. Make sure you‚Äôre starting with a fresh session and you‚Äôve committed and pushed all your changes from yesterday.\nCreate a new Quarto html document.\nFile &gt; New File &gt; Quarto Document\n\nRender it.\nPlay around. Run each of the chunks. Toggle between the Source and Visual modes. Show the outline."
  },
  {
    "objectID": "day-2/01-quarto.html#resources",
    "href": "day-2/01-quarto.html#resources",
    "title": "2.1 Reports and manuscripts with Quarto",
    "section": "Resources",
    "text": "Resources\n\nThe quarto website is an amazing resource\nFeel free to look at the source code of this site\n\nAdditional resources for R Markdown will have a lot of overlap:\n\nThe Definitive Guide to R Markdown\nThe R Markdown Cookbook"
  },
  {
    "objectID": "day-2/04-renv.html",
    "href": "day-2/04-renv.html",
    "title": "2.4 {renv}",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-2/04-renv.html#exercises",
    "href": "day-2/04-renv.html#exercises",
    "title": "2.4 {renv}",
    "section": "Exercises",
    "text": "Exercises\n\nInstall {renv}, then initialize in your in-class R project with renv::init()\nFind and open the renv.lock file to look at the packages that are included.\nInstall a new R package of your choice. (Not sure what to choose? Try one of these fun packages. For example, I did install.packages(\"hadley/emo\").)\nCreate an R script and save it in your R project. Include some code that requires the package. For example:\n\n\nemo::ji(\"banana\")\n\n\nRun renv::status() to make sure your project picked up the package as a dependency.\nRun renv::snapshot() to record that package in your lockfile.\nOpen your lockfile and look for your new package. For example, mine now has:\n\n\"emo\": {\n      \"Package\": \"emo\",\n      \"Version\": \"0.0.0.9000\",\n      \"Source\": \"git\",\n      \"RemoteType\": \"git\",\n      \"RemoteUrl\": \"https://github.com/hadley/emo\",\n      \"RemoteHost\": \"api.github.com\",\n      \"RemoteUsername\": \"hadley\",\n      \"RemoteRepo\": \"emo\",\n      \"RemoteRef\": \"master\",\n      \"RemoteSha\": \"3f03b11491ce3d6fc5601e210927eff73bf8e350\",\n      \"Requirements\": [\n        \"R\",\n        \"assertthat\",\n        \"crayon\",\n        \"glue\",\n        \"lubridate\",\n        \"magrittr\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"utils\"\n      ],\n      \"Hash\": \"eb32b8f0bb50621ad498f5d836b546a4\"\n    },\n\nCommit and push. Now anyone can recreate the state of your packages at this moment!"
  },
  {
    "objectID": "day-2/04-renv.html#resources",
    "href": "day-2/04-renv.html#resources",
    "title": "2.4 {renv}",
    "section": "Resources",
    "text": "Resources\n\nOfficial {renv} documentation\n{renv} GitHub repository"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EPI 590R",
    "section": "",
    "text": "August 14-15, 2023\n\n9 am - 5 pm\n\n\n\nLouisa Smith\nAssistant Professor\nDepartment of Health Sciences, Northeastern University\nl.smith@northeastern.edu"
  },
  {
    "objectID": "day-1/08-statistics.html",
    "href": "day-1/08-statistics.html",
    "title": "1.8 Finer control over statistics",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/08-statistics.html#slides",
    "href": "day-1/08-statistics.html#slides",
    "title": "1.8 Finer control over statistics",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/02-github.html",
    "href": "day-1/02-github.html",
    "title": "1.2 Introduction to Git and GitHub",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/02-github.html#exercises",
    "href": "day-1/02-github.html#exercises",
    "title": "1.2 Introduction to Git and GitHub",
    "section": "Exercises",
    "text": "Exercises\n\nFork the repo at https://github.com/louisahsmith/epi590r-in-class by clicking ‚ÄúFork‚Äù in the upper right.\n\nOn the next page, click ‚ÄúCreate fork‚Äù. You only need the main branch, so keep that box checked. Forking a repository creates a copy that belongs to you.1 This is what you want to do, for example, if you want to make some changes to an R package that someone else has written. You don‚Äôt have the ability to change the original repository, but you can pull any future changes the owner makes so that yours is always up to date, and you can ask them to pull in to their version any changes that you make (a pull request).\nOn your fork of the repository, click the green ‚ÄúCode‚Äù button. We are going to clone the repository to your computer using HTTPS. HTTPS should already be underlined, but if, not, select it. Copy the URL (this should have your username, not mine!).\n\nOpen up RStudio. Go to File &gt; New Project. Choose ‚ÄúVersion Control‚Äù then ‚ÄúGit‚Äù on the next page.\n\nPaste the URL you copied earlier. You can name the project directory whatever you want, but I find it‚Äôs easiest if it has the same name as the repo. Then choose where you want to store the project.2 You can browse the file system on your computer to do so. For me, this will create the folder /Users/l.smith/Documents/Teaching/Emory/epi590r-in-class/ and everything in the repo will be downloaded to that folder. Write down this path somewhere if you can‚Äôt remember it, so you can find it later!\nYou can select ‚ÄúOpen in new session‚Äù if you have already been doing something in R and want to keep that other RStudio window open. Then ‚ÄúCreate Project‚Äù.\n\nFrom the filepane in RStudio, open README.md. Write your name in the file and save.\nIn your Git pane, you‚Äôll see that file pop up because it has been modified (M). When you click on the checkbox, you are staging the file.3 Then click ‚ÄúCommit‚Äù.\n\nYou‚Äôll see a diff of the changes you made to that file. If you don‚Äôt like them, you can revert. Add a commit message to explain what changes you‚Äôve made. Then ‚ÄúCommit‚Äù, close the new window that opens, and then ‚ÄúPush‚Äù.4\n\nGo back to your web browser to check your repo! What do you notice?"
  },
  {
    "objectID": "day-1/02-github.html#resources",
    "href": "day-1/02-github.html#resources",
    "title": "1.2 Introduction to Git and GitHub",
    "section": "Resources",
    "text": "Resources\n\nHappy Git With R section 12"
  },
  {
    "objectID": "day-1/07-regression.html",
    "href": "day-1/07-regression.html",
    "title": "1.7 Regression tables with {gtsummary}",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/07-regression.html#slides",
    "href": "day-1/07-regression.html#slides",
    "title": "1.7 Regression tables with {gtsummary}",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/01-intro.html",
    "href": "day-1/01-intro.html",
    "title": "1.1 Introduction to the course",
    "section": "",
    "text": "Open the slides in a new tab here."
  },
  {
    "objectID": "day-1/01-intro.html#exercises",
    "href": "day-1/01-intro.html#exercises",
    "title": "1.1 Introduction to the course",
    "section": "Exercises",
    "text": "Exercises\n\nInstall the {usethis} package:\ninstall.packages(\"usethis\")\nIntroduce yourself to git:\nusethis::use_git_config(user.name = \"Louisa Smith\", user.email = \"louisahsmith@gmail.com\")\nCreate a github token:\nusethis::create_github_token()\nThis will open up your browser. Describe where the token will be used and choose an expiration date. Should you choose ‚ÄúNo expiration‚Äù? Do as Github says, not as I do.1 You don‚Äôt need to change any of the other options. Click ‚ÄúGenerate token‚Äù.\n\nCopy the token. (I deleted the one in this screenshot immediately, but you shouldn‚Äôt share with anyone or save it anywhere but a password manager ‚Äì treat it like a password.)\n\nBack in R, run this code and paste your token where it says ‚ÄúEnter password‚Äù:\ngitcreds::gitcreds_set()\nYou‚Äôre all set! Come back to these instructions and repeat whenever your token expires or you are using a different device."
  },
  {
    "objectID": "day-1/01-intro.html#resources",
    "href": "day-1/01-intro.html#resources",
    "title": "1.1 Introduction to the course",
    "section": "Resources",
    "text": "Resources\n\nHappy Git With R section 7 & 9"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "R Resources",
    "section": "",
    "text": "R for Data Science Slack learning group: https://www.rfordatasci.com/about/\nMore extensive Harvard course covering R and other aspects of computing: https://id529.github.io/\nRMarkdown book: https://bookdown.org/yihui/rmarkdown/\nQuarto: https://quarto.org/\nInstalling LateX to generate PDFs with RMarkdown or Quarto: https://bookdown.org/yihui/rmarkdown-cookbook/install-latex.html\nCheat sheets: https://posit.co/resources/cheatsheets/"
  }
]