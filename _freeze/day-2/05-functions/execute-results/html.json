{
  "hash": "83c2b9669750131c60cc8d43d6ff14c4",
  "result": {
    "markdown": "---\ntitle: \"2.5 Functions\"\n---\n\n\nOpen the slides in a new tab [here](slides/05-functions.qmd){target=\"_blank\"}.\n\n<div>\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"slides/05-functions.html\"></iframe>\n```\n\n\n</div>\n\n## Exercises\n\n1. Square a number. You're tired of writing `x^2` when you want to square `x`, so you want a function to square a number. You can call it `square()`. I showed this in the slides, now try on your own!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# start out with a number to test\nx <- 3\n# you'll want your function to return this number\nx^2\nsquare <- function() {\n  \n}\n# test it out\nsquare(x)\nsquare(53)\n53^2 # does this match?\n```\n:::\n\n\n2. Raise to any power. You don't just want to square numbers, you want to raise them to higher powers too. Make a function that uses two arguments, `x` for a number, and `power` for the power. Call it `raise()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraise <- function() {\n  \n}\n\n# test with\nraise(x = 2, power = 4)\n# should give you\n2^4\n```\n:::\n\n\n3. Change your `raise()` function to default to squaring `x` when the user doesn't enter a value for `power`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test\nraise(x = 5)\n# should give you\n5^2\n```\n:::\n\n\n## Resources\n\n-   [Advanced R](-\thttps://adv-r.hadley.nz/functions.html)",
    "supporting": [
      "05-functions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}