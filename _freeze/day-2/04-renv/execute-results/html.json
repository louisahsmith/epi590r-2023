{
  "hash": "12e275df356408ca31cc7e22ee474f71",
  "result": {
    "markdown": "---\ntitle: \"Package management with {renv}\"\n---\n\n\n\n# Overview\n\n`{renv}` is a package management tool for R that helps you create isolated and reproducible R environments. It allows you to specify the exact versions of R packages that your project depends on, ensuring that your code runs consistently across different environments.\n\nWith `{renv}`, you can create a project-specific library of packages, which are separate from your global R library. This allows you to have different versions of packages for different projects and ensures that your project dependencies are self-contained. `{renv}` also provides tools for managing and resolving package dependencies, making it easier to collaborate with others and share your code.\n\nTo use `{renv}` in your projects, set up the project environment by running `renv::init()`. This command creates an `renv.lock` file, which specifies the exact versions of packages needed for the project. Other people can then replicate the environment by running `renv::restore()` using the `renv.lock` file.\n\n# Slides\n\nOpen the slides in a new tab [here](../slides/renv.html){target=\"_blank\"}.\n\nDownload the slides as a new pdf [here](../slides/renv.pdf){target=\"_blank\"}.\n\n<div>\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"../slides/renv.html\"></iframe>\n```\n\n\n</div>\n\n# Exercise\n\n1.  Download the `renv.lock` file [here](https://raw.githubusercontent.com/louisahsmith/reproducible-epi-workshop-2023/main/renv.lock).\n\n-   If it downloads a file, navigate to your R project in your computer file system and replace the `renv.lock` file that's already there with this new one.\n-   If it opens in the web browser, copy all the text and paste over the `renv.lock` file that's already in your R project.\n\n2.  In your R project, run `renv::restore()`.\n\n3.  Install a new R package of your choice. (Not sure what to choose? Try one of [these fun packages](https://medium.com/geekculture/15-fun-r-packages-you-may-not-know-of-fb25a9dcd627). For example, I did `install.packages(\"hadley/emo\")`.)\n\n4.  Create an R script and save it in your R project. Include some code that requires the package. For example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemo::ji(\"banana\")\n```\n:::\n\n\n4.  Run `renv::status()` to make sure your project picked up the package as a dependency.\n\n5.  Run `renv::snapshot()` to record that package in your lockfile.\n\n6.  Open your lockfile and look for your new package. For example, mine now has:\n\n```         \n\"emo\": {\n      \"Package\": \"emo\",\n      \"Version\": \"0.0.0.9000\",\n      \"Source\": \"git\",\n      \"RemoteType\": \"git\",\n      \"RemoteUrl\": \"https://github.com/hadley/emo\",\n      \"RemoteHost\": \"api.github.com\",\n      \"RemoteUsername\": \"hadley\",\n      \"RemoteRepo\": \"emo\",\n      \"RemoteRef\": \"master\",\n      \"RemoteSha\": \"3f03b11491ce3d6fc5601e210927eff73bf8e350\",\n      \"Requirements\": [\n        \"R\",\n        \"assertthat\",\n        \"crayon\",\n        \"glue\",\n        \"lubridate\",\n        \"magrittr\",\n        \"purrr\",\n        \"rlang\",\n        \"stringr\",\n        \"utils\"\n      ],\n      \"Hash\": \"eb32b8f0bb50621ad498f5d836b546a4\"\n    },\n```\n\n# Resources\n\n- [`{renv}` documentation](https://rstudio.github.io/renv/index.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}