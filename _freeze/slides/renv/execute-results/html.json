{
  "hash": "d34265368d66eba6c52ff58e87636a09",
  "result": {
    "markdown": "---\ntitle: \"{renv}\"\nformat: revealjs\n---\n\n\n## What is `{renv}`?\n\n\n::: {.cell}\n\n:::\n\n\n\n\n`{renv}` is an R package for managing project dependencies and creating reproducible environments\n\n::: center\n![](https://rstudio.github.io/renv/logo.svg){style=\"height: 500px;\"}\n:::\n\n## Benefits of using `{renv}`\n\n1.  **Isolation:** Creates project-specific environments separate from the global R library.\n2.  **Reproducibility:** Ensures consistent package versions for code reproducibility.\n3.  **Collaboration:** Facilitates sharing and collaborating on projects with others.\n\n## Getting Started with `{renv}`\n\n1.  Install `{renv}`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"renv\")\n```\n:::\n\n\n2.  Initialize a project\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::init()\n```\n:::\n\n\n3.  Install packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"other_package\")\n# only an option when using renv!\ninstall.packages(\"github_user/github_package\")\n```\n:::\n\n\n4.  Track dependencies via a lockfile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::snapshot()\n```\n:::\n\n\n## Behind the scenes\n\n-   Your project `.Rprofile` is updated to include:\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    source(\"renv/activate.R\")\n    ```\n    :::\n\n\n    This is run every time R starts, and does some management of the library paths to make sure when you call `install.packges(\"package\")` or `library(package)` it does to the right place (`renv/library/R-{version}/{computer-specifics}`)\n\n<!-- -->\n\n-   A `renv.lock` file (really just a text file) is created to store the names and versions of the packages.\n\n## `renv.lock`\n\n```         \n{\n  \"R\": {\n    \"Version\": \"4.3.0\",\n    \"Repositories\": [\n      {\n        \"Name\": \"CRAN\",\n        \"URL\": \"https://cran.rstudio.com\"\n      }\n    ]\n  },\n  \"Packages\": {\n    \"R6\": {\n      \"Package\": \"R6\",\n      \"Version\": \"2.5.1\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"470851b6d5d0ac559e9d01bb352b4021\"\n    },\n    base64enc\": {\n      \"Package\": \"base64enc\",\n      \"Version\": \"0.1-3\",\n      \"Source\": \"Repository\",\n      \"Repository\": \"CRAN\",\n      \"Requirements\": [\n        \"R\"\n      ],\n      \"Hash\": \"543776ae6848fde2f48ff3816d0628bc\"\n    },\n```\n\n## Using `{renv}` later\n\nRestore an environment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::restore()\n```\n:::\n\n\nInstall new packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"other_package\")\n```\n:::\n\n\nUpdate the lockfile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::snapshot()\n```\n:::\n\n\n## Collaboration with `{renv}`\n\n-   Share the project's `renv.lock` file with collaborators to ensure consistent environments\n-   When they run `renv::restore()`, the correct versions of the packages will be installed on their computer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::restore()\n```\n:::\n\n\n## Other helpful functions\n\nRemove packages that are no longer used:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::clean()\n```\n:::\n\n\nCheck the status of the project library with respect to the lockfile:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::status()\n```\n:::\n\n\nThis will tell you to `renv::snapshot()` to add packages you've installed but haven't snapshotted, or `renv::restore()` if you're missing packages you need but which aren't installed\n\n## Conclusion\n\n`{renv}` benefits:\n\n-   Isolation, reproducibility, and collaboration\n\nGetting started with `{renv}`\n\n1.  Initialize a project using `renv::init()`\n2.  Install packages and store with `renv::snapshot()`\n3.  Restore later or elsewhere with `renv::restore()`\n\nAdditional resources\n\n-   [Official `{renv}` documentation](https://rstudio.github.io/renv/)\n-   [`{renv}` GitHub repository](https://github.com/rstudio/renv)\n",
    "supporting": [
      "renv_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}