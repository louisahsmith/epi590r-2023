{
  "hash": "de00e20136a42df86c6277c5002ad809",
  "result": {
    "markdown": "---\ntitle: \"Creating new projects\"\nsubtitle: \"Starting from scratch\"\nformat: revealjs\nexecute:\n  eval: false\n---\n\n\n## EPI 590R final project\n\nYour goal will be to create an analysis that \n\n- I can reproduce on my own computer\n- Is easy to rerun if I tell you, for example, to remove the 12th row of your dataset\n\nWe'll start this in class!\n\n:::aside\nThe final project will be due August 29. More info to come!\n:::\n\n## New projects\n\nWe cloned our first project from GitHub; now we are going to start a new project from scratch\n\n1. File \\> New Project \\> New Directory \\> New Project\n\n- If you ever want to convert an existing folder that holds an analysis into an R project, you can choose \"Existing Directory\"\n- You'll also see other options besides \"New Project\" -- an R package, a Shiny app, etc.\n  - These will get you set up with some initial files for these types of projects\n  - You can also make a template of your own!\n  \n## New projects\n\n2.  Choose a name for your new project and where to store it on your computer\n- Check \"Create a git repository\"\n  - This gets you all set to connect to GitHub and creates a `.gitignore` file\n- You can leave \"Use renv with this project\" unchecked (we'll be introducing the `{renv}` package later!)\n\n## Initial Git commit\n\n3.  Stage and commit the files\n- I usually use \"initial commit\" as my first commit message since I haven't don't anything yet!\n- We can't yet push because we haven't connected to a remote repository\n\n##  {background-image=\"images/68739659-fb6f-41e8-9813-32e1de3d82c0.png\" background-size=\"contain\"}\n\n::: aside\n[\\@allison_horst](https://twitter.com/allison_horst)\n:::\n\n## Creating a new repo on GitHub\n\n4.  Open up your web browser to GitHub and make a new repository\n\n    ::: panel-tabset\n    ## From github.com\n\n    ![](../images/Screenshot%202023-08-10%20at%207.17.03%20PM.png){width=\"500\"}\n\n    ## From github.com/username\n\n    ![](../images/Screenshot%202023-08-10%20at%207.16.39%20PM.png){width=\"589\"}\n    :::\n\n## Repository options\n\n5.  Choose a name (preferably one that matches the name you gave your R project). \n- You can choose to make it private, if you wish\n  - Private repos have some fewer features *unless* you have GitHub Pro (which you can get for free as a student with the [GitHub student developer pack](https://education.github.com/pack)!)\n- You don't need to click anything else\n\n## Connect the local to the remote\n\n- You created your local repo with RStudio in a directory you chose\n- Now you need to connect it to the remote repo on GitHub\n\n6.  Copy the code from the second section: \"push an existing repository from the command line\" in the *terminal* within RStudio.\n\n## Connect the local to the remote\n\n7.  Run the three lines of code *one at a time*, then refresh your GitHub page!\n\n![](../images/Screenshot%202023-08-10%20at%207.32.12%20PM.png)\n\n\n## `.gitignore`\n\nYou likely don't want to push everything to GitHub, even if you have a private repository\n\n- Be especially careful about data and passwords\n- You also can't push very large files (>100 mb)\n\nA `.gitignore` is a special text file that tells Git not to track certain files\n\n- RStudio starts you off with a few entries, including `.Rhistory` since no one needs to see everything you've run in R!\n\n## `.gitignore` exercises\n\n8.  Create a new file called `secrets.txt` within this new repo\n- Write down your deepest, darkest secrets and save\n\n9.  Open `.gitignore` via the RStudio filepane\n- Add \"secrets.txt\" below the files that RStudio helpfully ignored for you\n- Save\n\nKeep your eye on the Git pane!\n\n## Starting the final project\n\n10. Set up your folders how you'd like in your repo (you can always change this)\n- Find some data, download it, and store it in your repo\n- Commit and push to GitHub!\n\nFor your final project, your data must be something that can be stored online and accessed by me.\n\nSome fun options for data are:\n\n-   <https://data.fivethirtyeight.com/>\n-   <https://github.com/rfordatascience/tidytuesday#datasets>\n-   <https://github.com/higgi13425/medicaldata/tree/master/data> (descriptions: <https://higgi13425.github.io/medicaldata/#list-of-datasets>)\n\n## Exercises\n\nGet started making a new project and GitHub repo for your final project and finding some fun data\n\nYou can always change anything you want later, and even delete the whole thing and start fresh!\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_ebb975fa\" data-warn-when=\"180\" data-update-every=\"1\" tabindex=\"0\" style=\"right:33%;bottom:0;margin:5%;padding:25px;font-size:3em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::",
    "supporting": [
      "05-new-projects_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}