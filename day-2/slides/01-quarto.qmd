---
title: "Reports and manuscripts with Quarto"
format: revealjs
execute: 
  eval: true
---

## What is `quarto`?

-   *Open-source document format and computational notebook system*
-   Integrates text, code, and outout
-   Can create multiple different types of products (documents, slides, websites, books)

::: center
![](https://github.com/rstudio/hex-stickers/blob/main/PNG/quarto.png?raw=true){height="300px"}
:::

## Why not R Markdown?

Only because quarto is newer and more featured!

-   Anything you already know how to do in R Markdown you can do in quarto, and more![^1]
-   All of these slides, website, etc. are all made in quarto.
-   If you know and love R Markdown, by all means keep using it!

[^1]: Slight caveat...

## Quarto workflow

1.  Create a Quarto document
2.  Write code
3.  Write text
4.  Repeat 2-3 in whatever order you want
5.  Render

## How does it work?

-   You text in markdown and code in R
-   `knitr` processes the code chunks, executes the R code, and inserts the code outputs (e.g., plots, tables) back into the markdown document
-   `pandoc` transforms the markdown document into various output formats

![](images/2b931008-dc7c-4bec-92cb-112a55126975.png)

## Text and code...

````         
# My header

Some text

Some *italic text*

Some **bold text**

- Eggs
- Milk

```{{r}}
x <- 3
x
```
````

## ... becomes ...

### My title

Some text

Some *italic text*

Some **bold text**

-   Eggs
-   Milk

```{r}
x <- 3
x
```

## If you prefer, you can use the visual editor

![](images/Screenshot%202023-08-14%20at%209.41.22%20PM.png)

## R chunks

Everything within the chunks has to be valid R[^2]

[^2]: You can also use other languages, like Python!

```{r}
#| echo: fenced
x <- 3
```

```{r}
#| echo: fenced
x + 4
```

Chunks run in order, continuously, like a single script

## YAML

At the top of your Quarto document, a header written in *yaml* describes options for the document

``` yml
---
title: "My document"
author: Louisa Smith
format: html
---
```

There are a *ton* of possible options, but importantly, this determines the document output

## Output

![](images/6f28e7d4-3394-43f9-8b0d-41c52de3883f.png)

<https://quarto.org/docs/output-formats/all-formats.html>

## Exercises

We're going to focus on html output

-   It's easy to transition to Word ([`format: docx`](https://quarto.org/docs/reference/formats/docx.html)) but it's not as good for constant re-rendering
-   You need a LaTeX installation for pdf
    -   I recommend [`{tinytex}`](https://yihui.org/tinytex/)

## Exercises

You can choose whether you want to have chunk output show up within the document (vs. just the console) when you are running Quarto (and RMarkdown) documents interactively

*Tools \> Global options*

![](images/Screenshot%202023-08-14%20at%208.35.58%20PM.png)

## Exercises

Open up your epi590r-2023-in-class R project!

*File \> New File \> Quarto Document*

![](images/Screenshot%202023-08-14%20at%209.40.22%20PM.png)

## Exercises

-   Try toggling between Source and Visual views
-   Toggle on and off the Outline
-   Click Render and look at the output

![](images/Screenshot%202023-08-14%20at%209.44.14%20PM.png)
